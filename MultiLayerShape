Layer switching implementation:

Define all the layer shapes. Meshes at given positions and rotations. These don't actually have to keep their perimeters outside
of the part(s) because we can simply include the perimeters in the domain finding process.

Assign priorities to the layer shapes. Higher priority layer shapes will "cut holes" in the domains of lower priority shapes.

Extrude the layer shapes along the Z axis for the interval of Z values which they'll actually print.

For each extruded shape, calculate which other ones it intersects with at all.

Store the extruded shapes in an interval tree for added speed.

For each layer shape, for each of it's Z offset values, fetch the set of potentially intersecting shapes from the interval tree, then
eliminate all those which don't intersect this layer shape's extrusion, and all those with lower priority than this one.

Intersect the remaining shapes with the layer shape, using the layer shape's edges as mentioned before, to get the domain of the layer
shape mesh outside of the shapes which cut holes in it.

Finally, intersect the layer shape mesh with the part and perform a boolean intersection in Clipper between the domain from the previous
section and this domain. Path the intersection as in normal nonplanar slicing.

Ordering the layers for printing: This is still unsolved, and introduces a lot of collision detection shittiness re: the hotend.